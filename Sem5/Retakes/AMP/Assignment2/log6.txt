Stack
((int b; (b = 10; (int c; (c = 8; (bool d; (d = b > c; (IF(d) THEN(print(b)) ELSE (print(c)))))))))
SymbolTable
{}
Output
[]
FileTable
{}
------------Stack
(int b | (b = 10; (int c; (c = 8; (bool d; (d = b > c; (IF(d) THEN(print(b)) ELSE (print(c))))))))
SymbolTable
{}
Output
[]
FileTable
{}
------------Stack
((b = 10; (int c; (c = 8; (bool d; (d = b > c; (IF(d) THEN(print(b)) ELSE (print(c))))))))
SymbolTable
{ b->0}
Output
[]
FileTable
{}
------------Stack
(b = 10 | (int c; (c = 8; (bool d; (d = b > c; (IF(d) THEN(print(b)) ELSE (print(c)))))))
SymbolTable
{ b->0}
Output
[]
FileTable
{}
------------Stack
((int c; (c = 8; (bool d; (d = b > c; (IF(d) THEN(print(b)) ELSE (print(c)))))))
SymbolTable
{ b->10}
Output
[]
FileTable
{}
------------Stack
(int c | (c = 8; (bool d; (d = b > c; (IF(d) THEN(print(b)) ELSE (print(c))))))
SymbolTable
{ b->10}
Output
[]
FileTable
{}
------------Stack
((c = 8; (bool d; (d = b > c; (IF(d) THEN(print(b)) ELSE (print(c))))))
SymbolTable
{ b->10,c->0}
Output
[]
FileTable
{}
------------Stack
(c = 8 | (bool d; (d = b > c; (IF(d) THEN(print(b)) ELSE (print(c)))))
SymbolTable
{ b->10,c->0}
Output
[]
FileTable
{}
------------Stack
((bool d; (d = b > c; (IF(d) THEN(print(b)) ELSE (print(c)))))
SymbolTable
{ b->10,c->8}
Output
[]
FileTable
{}
------------Stack
(bool d | (d = b > c; (IF(d) THEN(print(b)) ELSE (print(c))))
SymbolTable
{ b->10,c->8}
Output
[]
FileTable
{}
------------Stack
((d = b > c; (IF(d) THEN(print(b)) ELSE (print(c))))
SymbolTable
{ b->10,c->8,d->false}
Output
[]
FileTable
{}
------------Stack
(d = b > c | (IF(d) THEN(print(b)) ELSE (print(c)))
SymbolTable
{ b->10,c->8,d->false}
Output
[]
FileTable
{}
------------Stack
((IF(d) THEN(print(b)) ELSE (print(c)))
SymbolTable
{ b->10,c->8,d->true}
Output
[]
FileTable
{}
------------Stack
(print(b))
SymbolTable
{ b->10,c->8,d->true}
Output
[]
FileTable
{}
------------Stack
()
SymbolTable
{ b->10,c->8,d->true}
Output
[10]
FileTable
{}
------------