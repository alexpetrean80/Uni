Stack
(((IF(b > a) THEN(print(a / b)) ELSE (print(c / b)) | d = false | c = 9 | b = 3 | a = 6 | bool d | int c | int b | int a))
SymbolTable
{}
Output
[]
FileTable
{}
------------Stack
(int a | int b | int c | bool d | a = 6 | b = 3 | c = 9 | d = false | (IF(b > a) THEN(print(a / b)) ELSE (print(c / b)))
SymbolTable
{}
Output
[]
FileTable
{}
------------Stack
(int b | int c | bool d | a = 6 | b = 3 | c = 9 | d = false | (IF(b > a) THEN(print(a / b)) ELSE (print(c / b)))
SymbolTable
{ a->0}
Output
[]
FileTable
{}
------------Stack
(int c | bool d | a = 6 | b = 3 | c = 9 | d = false | (IF(b > a) THEN(print(a / b)) ELSE (print(c / b)))
SymbolTable
{ a->0,b->0}
Output
[]
FileTable
{}
------------Stack
(bool d | a = 6 | b = 3 | c = 9 | d = false | (IF(b > a) THEN(print(a / b)) ELSE (print(c / b)))
SymbolTable
{ a->0,b->0,c->0}
Output
[]
FileTable
{}
------------Stack
(a = 6 | b = 3 | c = 9 | d = false | (IF(b > a) THEN(print(a / b)) ELSE (print(c / b)))
SymbolTable
{ a->0,b->0,c->0,d->false}
Output
[]
FileTable
{}
------------Stack
(b = 3 | c = 9 | d = false | (IF(b > a) THEN(print(a / b)) ELSE (print(c / b)))
SymbolTable
{ a->6,b->0,c->0,d->false}
Output
[]
FileTable
{}
------------Stack
(c = 9 | d = false | (IF(b > a) THEN(print(a / b)) ELSE (print(c / b)))
SymbolTable
{ a->6,b->3,c->0,d->false}
Output
[]
FileTable
{}
------------Stack
(d = false | (IF(b > a) THEN(print(a / b)) ELSE (print(c / b)))
SymbolTable
{ a->6,b->3,c->9,d->false}
Output
[]
FileTable
{}
------------Stack
((IF(b > a) THEN(print(a / b)) ELSE (print(c / b)))
SymbolTable
{ a->6,b->3,c->9,d->false}
Output
[]
FileTable
{}
------------Stack
(print(c / b))
SymbolTable
{ a->6,b->3,c->9,d->false}
Output
[]
FileTable
{}
------------Stack
()
SymbolTable
{ a->6,b->3,c->9,d->false}
Output
[3]
FileTable
{}
------------Stack
(((IF(b > a) THEN(print(a / b)) ELSE (print(c / b)) | d = false | c = 9 | b = 3 | a = 6 | bool d | int c | int b | int a))
SymbolTable
{}
Output
[]
FileTable
{}
------------Stack
(int a | int b | int c | bool d | a = 6 | b = 3 | c = 9 | d = false | (IF(b > a) THEN(print(a / b)) ELSE (print(c / b)))
SymbolTable
{}
Output
[]
FileTable
{}
------------Stack
(int b | int c | bool d | a = 6 | b = 3 | c = 9 | d = false | (IF(b > a) THEN(print(a / b)) ELSE (print(c / b)))
SymbolTable
{ a->0}
Output
[]
FileTable
{}
------------Stack
(int c | bool d | a = 6 | b = 3 | c = 9 | d = false | (IF(b > a) THEN(print(a / b)) ELSE (print(c / b)))
SymbolTable
{ a->0,b->0}
Output
[]
FileTable
{}
------------Stack
(bool d | a = 6 | b = 3 | c = 9 | d = false | (IF(b > a) THEN(print(a / b)) ELSE (print(c / b)))
SymbolTable
{ a->0,b->0,c->0}
Output
[]
FileTable
{}
------------Stack
(a = 6 | b = 3 | c = 9 | d = false | (IF(b > a) THEN(print(a / b)) ELSE (print(c / b)))
SymbolTable
{ a->0,b->0,c->0,d->false}
Output
[]
FileTable
{}
------------Stack
(b = 3 | c = 9 | d = false | (IF(b > a) THEN(print(a / b)) ELSE (print(c / b)))
SymbolTable
{ a->6,b->0,c->0,d->false}
Output
[]
FileTable
{}
------------Stack
(c = 9 | d = false | (IF(b > a) THEN(print(a / b)) ELSE (print(c / b)))
SymbolTable
{ a->6,b->3,c->0,d->false}
Output
[]
FileTable
{}
------------Stack
(d = false | (IF(b > a) THEN(print(a / b)) ELSE (print(c / b)))
SymbolTable
{ a->6,b->3,c->9,d->false}
Output
[]
FileTable
{}
------------Stack
((IF(b > a) THEN(print(a / b)) ELSE (print(c / b)))
SymbolTable
{ a->6,b->3,c->9,d->false}
Output
[]
FileTable
{}
------------Stack
(print(c / b))
SymbolTable
{ a->6,b->3,c->9,d->false}
Output
[]
FileTable
{}
------------Stack
()
SymbolTable
{ a->6,b->3,c->9,d->false}
Output
[3]
FileTable
{}
------------